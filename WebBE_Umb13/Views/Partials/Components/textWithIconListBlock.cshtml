@using Umbraco.Extensions
@using Umbraco.Cms.Core.Models
@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>

@{
    var heading = Model.Content.Value<string>("heading");
    var subheading = Model.Content.Value<string>("subHeading");
    var imgUrl = Model.Content.Value<Umbraco.Cms.Core.Models.MediaWithCrops>("image")?.GetCropUrl(/* width: 330, */ height: 380); //4items = 2rows =~310 6items = 3rows =~470 8items = 4rows =~630
    var items = Model.Content.Value<IEnumerable<BlockListItem>>("items") ?? Enumerable.Empty<BlockListItem>();

    // "cicrle" "row" "column" = 2 colums with image between
    var dispTyle = Model.Content.Value<string>("displayStyle", fallback: Fallback.ToDefaultValue, defaultValue: "row");
    var iconPos = Model.Content.Value<string>("iconPosition", fallback: Fallback.ToDefaultValue, defaultValue: "left");

    var justCenter = dispTyle == "row" ? "justify-content-center" : ""; // justify-center excess items
    var listStyle = dispTyle == "circle" ? "type--1 display--circle" : "display--row";
    var cardStyle = dispTyle == "row" ? (iconPos == "left" ? "hover--border icon--left" : "hover--border icon--top align--center") : null;

    // "type--1 display--circle" will always show inside image
    var notShowInsideImg = string.IsNullOrWhiteSpace(imgUrl);
}
<div class="section-block__cnt">
    <div class="row justify-content-center text-center">
        <div class="col-12 col-md-10 col-lg-8">
            @if (!string.IsNullOrEmpty(subheading)){
                <h5 class="section-block__top a-fadein a-fadein--left">@subheading</h5>
            }
            <h2 class="section-block__tle a-fadein a-fadein--right">@heading</h2>
            @if (Model.Content.HasValue("paragraph")) {
                <div class="text-lg a-fadein a-fadein--right">@Model.Content.Value("paragraph")</div>
            }                
        </div>
    </div>
  <div class="section-block__cpn">
      <div class="list-specs @listStyle count--@items.Count()">
          @if (dispTyle == "circle" && !string.IsNullOrEmpty(imgUrl))
          {
              <div class="list-specs__img">
                  <img src="@imgUrl" alt="@heading">
              </div>
          }
          <div class="list-specs__row @justCenter">
              @foreach (var item in items)
              {
                  var itemHeading = item.Content.Value<string>("heading");
                  var itemParag = item.Content.Value<string>("paragraph");
                  var iconImage = item.Content.Value<string>("iconImage", fallback: Fallback.ToDefaultValue, defaultValue: "lotus-woman.svg");
                  var itemStyle = cardStyle != null ? (item.Content.Value<bool>("boxShadow") ? $"{cardStyle} has--shadow" : cardStyle) : null;

                  <div class="card-spec @itemStyle">
                      <div class="card-spec__wrp">
                          <div class="card-spec__icn">
                              <img src="/assets/images/icons/@iconImage" alt="@itemHeading">
                          </div>
                          <div class="card-spec__cnt">
                              <h4 class="card-spec__tle">@itemHeading</h4>
                              @if (!string.IsNullOrEmpty(itemParag))
                              {
                                  <div class="card-spec__des">@itemParag</div>
                              }
                          </div>
                      </div>
                  </div>
              }
          </div>
      </div>
  </div>
</div>