@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@using Umbraco.Cms.Core.PropertyEditors;
@using YeahWeb.Extensions;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>

@{
    Layout = null;

    // Check if the layout has any areas
    if (Model?.Areas.Any() != true) { return; }

    // Get the layout settings
    var hasSettings = Model.Settings != null;

    var bgColor = Model.Settings?.Value<ColorPickerValueConverter.PickedColor>("layoutBackgroundColor");
    // var colorLabel = bgColor?.Label;

    // var colorShade = Model.Settings?.Value<decimal>("layoutBackgroundColorShade")!;
    var colorOpacity = Model.Settings?.Value<decimal>("layoutBackgroundColorOpacity")!;

    var bgImage = Model.Settings?.Value<Umbraco.Cms.Core.Models.MediaWithCrops>("layoutBackgroundImage");
    var bgImageUrl = bgImage?.MediaUrl();

    //NOTE: PickedColor when uncheck the selected color, the value changes to "transparent", issue???

    var styleAttribute = "";
    if (!string.IsNullOrEmpty(bgImageUrl))
    {
        styleAttribute = $"background-image: url({bgImageUrl});";
    }
    else if (!string.IsNullOrEmpty(bgColor?.Color))
    {
        // style attr for background color (--bg-color) with rgba/hex
        styleAttribute = $"--bg-color: rgba({Helpers.HexToRgb(bgColor.Color)}, {colorOpacity});";
    }

    //NOTE: IMPORTANT has issue when layoutBackgroundCss contains "parallax_bg" => layoutBackgroundCss must not have "parallax_bg"
    var cssCustom = Model.Settings?.Value<string>("layoutBackgroundCss");

    var figBlocks = Model.Settings?.Value<IEnumerable<BlockListItem>>("figures") ?? Enumerable.Empty<BlockListItem>();
}

<div class="section-block layout-item @cssCustom" data-bgimage="@bgImageUrl" style="@styleAttribute" data-block-alias="@Model.Content.ContentType.Alias">
    @RenderBody()
    @foreach (var figItem in figBlocks.Select(b => b.Content).OfType<ContentModels.FigureItem>())
    {
        var pos = $"{figItem.VerPosition}-{figItem.HozPosition}";
        await Html.RenderPartialAsync($"Figures/{figItem.Figure}", Tuple.Create(pos, figItem.Effect));
        @* var posEffect = string.IsNullOrEmpty(figItem.Effect) ? pos : $"{pos} {figItem.Effect}";
        <figure class="animate-shape @posEffect a-fadein a-fadein--right a-fadein--init"><img src="/assets/images/patterns/golden-5petal-flower-trimmedright-shape1.png" alt="figure image"></figure> *@            
    }
</div>